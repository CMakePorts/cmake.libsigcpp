2003-03-05  Martin Schulze  <MHL.Schulze@t-online.de>

	* tests/Makefile.am, tests/test_size.cc, tests/test_accumulated.cc:
	Add two test cases. test_size is showing the size of  public and
	internal structures. (Which apart from empty signals are smaller
	than the sizes of the equivalent libsigc++-1.2 structures.)
	test_accumulated is a test for the template signal<>::accumulated<>
	at the same time showing the use of accumulators in libsigc++2.

	* Offtopic: My note about binary sizes from 2003-02-10 is wrong.
	Stripped libsigc++2 test binaries are about 8-10k in size.

2003-03-05  Martin Schulze  <MHL.Schulze@t-online.de>

	* sigc++/visit_each.h: BUGFIX in template specialization
	limit_derive_target<T_Target*,T_action>::with_type<false,T_type>:
	Add non-const overloads for static void execute_() avoiding
	compile time errors.

2003-02-16  Martin Schulze  <MHL.Schulze@t-online.de>

	* tests/Makefile.am, tests/test_disconnect.cc:
	Add testcase with a mixed connection & disconnection sequence.

2003-02-16  Martin Schulze  <MHL.Schulze@t-online.de>

	* sigc++/signal.cc: Bugfix in signal_base::insert():
	Set notification function in the newly created copy of
	slot_ rather than in slot_ itself.

2003-02-10  Martin Schulze  <MHL.Schulze@t-online.de>

	* sigc++/signal.h.m4: Comment in typedefs for iterator types in
	the signal#<> class template. Make signal#<>::connect() return an
	iterator for convenience.
	(Note that the first change increases the binary size of
	tests/test_signal from 201k to 204k, the second change to 206k.)

2003-01-23  Murray Cumming  <murrayc@usa.net>

	* sigc++/adaptors/lambda is disable temporarily (not built and
	not distributed) because it gets built before its parent
	directory, but #includes generated sources in the parent directory.

2003-01-22  Murray Cumming  <murrayc@usa.net>

	* Added Andreas Rottman's example.

2003-01-22  Murray Cumming  <murrayc@usa.net>

	* Applied Andreas Rottman's make dist fixes.

2003-01-14  Murray Cumming  <murrayc@usa.net>

	* Added whitespace to make the code more readable.

